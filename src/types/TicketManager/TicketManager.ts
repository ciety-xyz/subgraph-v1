// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class SetTicketSchedule extends ethereum.Event {
  get params(): SetTicketSchedule__Params {
    return new SetTicketSchedule__Params(this);
  }
}

export class SetTicketSchedule__Params {
  _event: SetTicketSchedule;

  constructor(event: SetTicketSchedule) {
    this._event = event;
  }

  get nftContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get groupId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get endDate(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TicketMint extends ethereum.Event {
  get params(): TicketMint__Params {
    return new TicketMint__Params(this);
  }
}

export class TicketMint__Params {
  _event: TicketMint;

  constructor(event: TicketMint) {
    this._event = event;
  }

  get nftContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get minter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get groupId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get quantity(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get maxQuantity(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class TicketManager extends ethereum.SmartContract {
  static bind(address: Address): TicketManager {
    return new TicketManager("TicketManager", address);
  }

  endDates(param0: Address, param1: BigInt): BigInt {
    let result = super.call("endDates", "endDates(address,uint256):(uint256)", [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromUnsignedBigInt(param1)
    ]);

    return result[0].toBigInt();
  }

  try_endDates(param0: Address, param1: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "endDates",
      "endDates(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ticketUsed(param0: Address, param1: BigInt, param2: Address): BigInt {
    let result = super.call(
      "ticketUsed",
      "ticketUsed(address,uint256,address):(uint32)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromAddress(param2)
      ]
    );

    return result[0].toBigInt();
  }

  try_ticketUsed(
    param0: Address,
    param1: BigInt,
    param2: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ticketUsed",
      "ticketUsed(address,uint256,address):(uint32)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromAddress(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class SetEndDateCall extends ethereum.Call {
  get inputs(): SetEndDateCall__Inputs {
    return new SetEndDateCall__Inputs(this);
  }

  get outputs(): SetEndDateCall__Outputs {
    return new SetEndDateCall__Outputs(this);
  }
}

export class SetEndDateCall__Inputs {
  _call: SetEndDateCall;

  constructor(call: SetEndDateCall) {
    this._call = call;
  }

  get _nft(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _groupId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _endDate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetEndDateCall__Outputs {
  _call: SetEndDateCall;

  constructor(call: SetEndDateCall) {
    this._call = call;
  }
}

export class UseTicketCall extends ethereum.Call {
  get inputs(): UseTicketCall__Inputs {
    return new UseTicketCall__Inputs(this);
  }

  get outputs(): UseTicketCall__Outputs {
    return new UseTicketCall__Outputs(this);
  }
}

export class UseTicketCall__Inputs {
  _call: UseTicketCall;

  constructor(call: UseTicketCall) {
    this._call = call;
  }

  get _signer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _minter(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _quantity(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _ticket(): UseTicketCall_ticketStruct {
    return changetype<UseTicketCall_ticketStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }
}

export class UseTicketCall__Outputs {
  _call: UseTicketCall;

  constructor(call: UseTicketCall) {
    this._call = call;
  }
}

export class UseTicketCall_ticketStruct extends ethereum.Tuple {
  get user(): Address {
    return this[0].toAddress();
  }

  get nft(): Address {
    return this[1].toAddress();
  }

  get price(): BigInt {
    return this[2].toBigInt();
  }

  get quantity(): BigInt {
    return this[3].toBigInt();
  }

  get groupId(): BigInt {
    return this[4].toBigInt();
  }

  get signature(): Bytes {
    return this[5].toBytes();
  }
}
