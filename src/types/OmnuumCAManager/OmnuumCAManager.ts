// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ManagerContractRegistered extends ethereum.Event {
  get params(): ManagerContractRegistered__Params {
    return new ManagerContractRegistered__Params(this);
  }
}

export class ManagerContractRegistered__Params {
  _event: ManagerContractRegistered;

  constructor(event: ManagerContractRegistered) {
    this._event = event;
  }

  get managerContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get topic(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class ManagerContractRemoved extends ethereum.Event {
  get params(): ManagerContractRemoved__Params {
    return new ManagerContractRemoved__Params(this);
  }
}

export class ManagerContractRemoved__Params {
  _event: ManagerContractRemoved;

  constructor(event: ManagerContractRemoved) {
    this._event = event;
  }

  get managerContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get topic(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class NftContractRegistered extends ethereum.Event {
  get params(): NftContractRegistered__Params {
    return new NftContractRegistered__Params(this);
  }
}

export class NftContractRegistered__Params {
  _event: NftContractRegistered;

  constructor(event: NftContractRegistered) {
    this._event = event;
  }

  get nftContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nftOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RoleAdded extends ethereum.Event {
  get params(): RoleAdded__Params {
    return new RoleAdded__Params(this);
  }
}

export class RoleAdded__Params {
  _event: RoleAdded;

  constructor(event: RoleAdded) {
    this._event = event;
  }

  get ca(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get role(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class RoleRemoved extends ethereum.Event {
  get params(): RoleRemoved__Params {
    return new RoleRemoved__Params(this);
  }
}

export class RoleRemoved__Params {
  _event: RoleRemoved;

  constructor(event: RoleRemoved) {
    this._event = event;
  }

  get ca(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get role(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class OmnuumCAManager__managerContractsResult {
  value0: string;
  value1: boolean;

  constructor(value0: string, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }
}

export class OmnuumCAManager extends ethereum.SmartContract {
  static bind(address: Address): OmnuumCAManager {
    return new OmnuumCAManager("OmnuumCAManager", address);
  }

  checkRegistration(_CA: Address): boolean {
    let result = super.call(
      "checkRegistration",
      "checkRegistration(address):(bool)",
      [ethereum.Value.fromAddress(_CA)]
    );

    return result[0].toBoolean();
  }

  try_checkRegistration(_CA: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkRegistration",
      "checkRegistration(address):(bool)",
      [ethereum.Value.fromAddress(_CA)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getContract(_topic: string): Address {
    let result = super.call("getContract", "getContract(string):(address)", [
      ethereum.Value.fromString(_topic)
    ]);

    return result[0].toAddress();
  }

  try_getContract(_topic: string): ethereum.CallResult<Address> {
    let result = super.tryCall("getContract", "getContract(string):(address)", [
      ethereum.Value.fromString(_topic)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  hasRole(_target: Address, _role: string): boolean {
    let result = super.call("hasRole", "hasRole(address,string):(bool)", [
      ethereum.Value.fromAddress(_target),
      ethereum.Value.fromString(_role)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(_target: Address, _role: string): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(address,string):(bool)", [
      ethereum.Value.fromAddress(_target),
      ethereum.Value.fromString(_role)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  indexedContracts(param0: string): Address {
    let result = super.call(
      "indexedContracts",
      "indexedContracts(string):(address)",
      [ethereum.Value.fromString(param0)]
    );

    return result[0].toAddress();
  }

  try_indexedContracts(param0: string): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "indexedContracts",
      "indexedContracts(string):(address)",
      [ethereum.Value.fromString(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  managerContracts(param0: Address): OmnuumCAManager__managerContractsResult {
    let result = super.call(
      "managerContracts",
      "managerContracts(address):(string,bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new OmnuumCAManager__managerContractsResult(
      result[0].toString(),
      result[1].toBoolean()
    );
  }

  try_managerContracts(
    param0: Address
  ): ethereum.CallResult<OmnuumCAManager__managerContractsResult> {
    let result = super.tryCall(
      "managerContracts",
      "managerContracts(address):(string,bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OmnuumCAManager__managerContractsResult(
        value[0].toString(),
        value[1].toBoolean()
      )
    );
  }

  nftContracts(param0: Address): boolean {
    let result = super.call("nftContracts", "nftContracts(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_nftContracts(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("nftContracts", "nftContracts(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  roles(param0: Address, param1: string): boolean {
    let result = super.call("roles", "roles(address,string):(bool)", [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromString(param1)
    ]);

    return result[0].toBoolean();
  }

  try_roles(param0: Address, param1: string): ethereum.CallResult<boolean> {
    let result = super.tryCall("roles", "roles(address,string):(bool)", [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromString(param1)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class AddRoleCall extends ethereum.Call {
  get inputs(): AddRoleCall__Inputs {
    return new AddRoleCall__Inputs(this);
  }

  get outputs(): AddRoleCall__Outputs {
    return new AddRoleCall__Outputs(this);
  }
}

export class AddRoleCall__Inputs {
  _call: AddRoleCall;

  constructor(call: AddRoleCall) {
    this._call = call;
  }

  get _CAs(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _role(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AddRoleCall__Outputs {
  _call: AddRoleCall;

  constructor(call: AddRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RegisterContractCall extends ethereum.Call {
  get inputs(): RegisterContractCall__Inputs {
    return new RegisterContractCall__Inputs(this);
  }

  get outputs(): RegisterContractCall__Outputs {
    return new RegisterContractCall__Outputs(this);
  }
}

export class RegisterContractCall__Inputs {
  _call: RegisterContractCall;

  constructor(call: RegisterContractCall) {
    this._call = call;
  }

  get _CA(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _topic(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class RegisterContractCall__Outputs {
  _call: RegisterContractCall;

  constructor(call: RegisterContractCall) {
    this._call = call;
  }
}

export class RegisterContractMultipleCall extends ethereum.Call {
  get inputs(): RegisterContractMultipleCall__Inputs {
    return new RegisterContractMultipleCall__Inputs(this);
  }

  get outputs(): RegisterContractMultipleCall__Outputs {
    return new RegisterContractMultipleCall__Outputs(this);
  }
}

export class RegisterContractMultipleCall__Inputs {
  _call: RegisterContractMultipleCall;

  constructor(call: RegisterContractMultipleCall) {
    this._call = call;
  }

  get _CAs(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _topics(): Array<string> {
    return this._call.inputValues[1].value.toStringArray();
  }
}

export class RegisterContractMultipleCall__Outputs {
  _call: RegisterContractMultipleCall;

  constructor(call: RegisterContractMultipleCall) {
    this._call = call;
  }
}

export class RegisterNftContractCall extends ethereum.Call {
  get inputs(): RegisterNftContractCall__Inputs {
    return new RegisterNftContractCall__Inputs(this);
  }

  get outputs(): RegisterNftContractCall__Outputs {
    return new RegisterNftContractCall__Outputs(this);
  }
}

export class RegisterNftContractCall__Inputs {
  _call: RegisterNftContractCall;

  constructor(call: RegisterNftContractCall) {
    this._call = call;
  }

  get _nftContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RegisterNftContractCall__Outputs {
  _call: RegisterNftContractCall;

  constructor(call: RegisterNftContractCall) {
    this._call = call;
  }
}

export class RemoveContractCall extends ethereum.Call {
  get inputs(): RemoveContractCall__Inputs {
    return new RemoveContractCall__Inputs(this);
  }

  get outputs(): RemoveContractCall__Outputs {
    return new RemoveContractCall__Outputs(this);
  }
}

export class RemoveContractCall__Inputs {
  _call: RemoveContractCall;

  constructor(call: RemoveContractCall) {
    this._call = call;
  }

  get _CA(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveContractCall__Outputs {
  _call: RemoveContractCall;

  constructor(call: RemoveContractCall) {
    this._call = call;
  }
}

export class RemoveRoleCall extends ethereum.Call {
  get inputs(): RemoveRoleCall__Inputs {
    return new RemoveRoleCall__Inputs(this);
  }

  get outputs(): RemoveRoleCall__Outputs {
    return new RemoveRoleCall__Outputs(this);
  }
}

export class RemoveRoleCall__Inputs {
  _call: RemoveRoleCall;

  constructor(call: RemoveRoleCall) {
    this._call = call;
  }

  get _CAs(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _role(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class RemoveRoleCall__Outputs {
  _call: RemoveRoleCall;

  constructor(call: RemoveRoleCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
