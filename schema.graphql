type Transaction @entity {
  "id: transactionHash(hex)"
  id: ID!
  event_selectors: [String!]!
  block_number: Int!
  timestamp: Int!
  from: String!
  to: String
  value: BigInt!
  gas_price: BigInt!

  "Derived"
  contracts: [Contract!] @derivedFrom(field: "transaction")
  contract_roles: [ContractRole!] @derivedFrom(field: "transaction")
  payments: [Payment!] @derivedFrom(field: "transaction")
  nfts: [Nft!] @derivedFrom(field: "transaction")
  mint_schedules: [MintSchedule!] @derivedFrom(field: "transaction")
  mints: [Mint!] @derivedFrom(field: "transaction")
  reveals: [Reveal!] @derivedFrom(field: "transaction")
}

type Contract @entity {
  "id: contractAddress(hex)"
  id: ID!
  block_number: Int!
  transaction: Transaction!
  owner: String!
  topic: String!
  is_removed: Boolean!
  is_revealed: Boolean
  is_owner_changed: Boolean!
  max_supply: Int
  total_minted_amount: Int
  cover_uri: String
  reveal_url: String
  collection_id: String

  "Derived"
  contract_roles: ContractRole @derivedFrom(field: "contract")
  mint_schedules: [MintSchedule!] @derivedFrom(field: "nft_contract")
  nfts: [Nft!] @derivedFrom(field: "nft_contract")
  mints: [Mint!] @derivedFrom(field: "nft_contract")
  reveals: Reveal @derivedFrom(field: "nft_contract")
}

type ContractRole @entity {
  "id: contractAddress(hex)"
  id: ID!
  block_number: Int!
  transaction: Transaction!
  contract: Contract
  role: [String!]!
}

type Payment @entity {
  "id: transactionHash(hex)_logIndex(dec) or EOA(hex)"
  id: ID!
  block_number: Int!
  transaction: Transaction
  sender: String! #msg.sender
  value: BigInt! #msg.value
  topic: String
  description: String
}

type Nft @entity {
  "id: nftContractAddress(hex)_tokenId(dec)"
  id: ID!
  block_number: Int!
  transaction: Transaction!
  nft_contract: Contract!
  token_id: ID!
  minter: Minter
  owners: [String!]!
}

type MintSchedule @entity {
  "id: nftContractAddress(hex)_scheduleGroupId(dec)"
  id: ID!
  block_number: Int!
  transaction: Transaction!
  nft_contract: Contract!
  topic: String!
  group_id: ID!
  end_date: Int!
  base_price: BigInt
  mint_supply: Int
  mint_limit_per_address: Int
  minted_amount: Int!
}

type Minter @entity {
  "id: minterAddress(hex)[_nftAddress(hex)[_groupId(dec)]]"
  id: ID!
  block_number: Int!
  minter_address: String!
  nfts: [Nft!] # way to reference NFTs for mintSchedule?
  minted_amount: Int!
}

type Mint @entity {
  "id: transactionHash(hex)_logIndex(dec)"
  id: ID!
  block_number: Int!
  transaction: Transaction!
  nft_contract: Contract!
  mint_schedule: MintSchedule
  topic: String!
  minter: Minter!
  mint_quantity: Int!
  max_quantity: Int
  mint_price: BigInt
}

type Reveal @entity {
  "id: requestId(hex)"
  id: ID!
  block_number: Int!
  transaction: Transaction!
  nft_contract: Contract!
  topic: String!
  vrf_fare: BigInt!
  random_number: BigInt
  starting_index: Int!
}